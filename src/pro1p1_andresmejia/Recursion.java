package pro1p1_andresmejia;

import javax.swing.JOptionPane;
import java.security.SecureRandom;

public class Recursion extends javax.swing.JFrame {

    Conversiones conv = new Conversiones();
    

    /**
     * Creates new form Recursion
     */
    public Recursion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setText("Recursi√≥n");

        jButton1.setText("Conversiones");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Multiplicar Matrices");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Menu Principal");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(146, 146, 146))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(174, 174, 174))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(61, 61, 61)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(90, 90, 90))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        conv.setVisible(true);
        conv.pack();
        conv.setLocationRelativeTo(this);// TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        int filas1 = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese filas de matriz 1: "));
        int columnas1 = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese columnas de matriz 1: "));
        int filas2 = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese filas de matriz 2: "));
        int columnas2 = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese columnas de matriz 2: "));
        if (columnas1 != filas2) {
            JOptionPane.showMessageDialog(this, "El numero de columnas de matriz 1 debe ser igual a filas de matriz 2");
        } 
        else {
            int[][] matrix1 = new int[filas1][columnas1];
            int[][] matrix2 = new int[filas2][columnas2];  
            matrix1=fill(matrix1, 0,0);
            matrix2=fill(matrix2, 0,0);
            int[][]matrix3=new int[filas1][columnas2];
            JOptionPane.showMessageDialog(this, "Matriz 1 es: \n"
                    + print(matrix1,0,0,"")+"\n"
                            + "Matriz 2 es: \n"
                            + print(matrix2,0,0,"")+"\n"
                                    + "La multiplicacion es: \n"
                                    + print(multiply(matrix1,matrix2,matrix3,0,0),0,0,"")
                                     );
            
            
        }
        
        
        
        
        
        

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2MouseClicked

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Recursion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Recursion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Recursion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Recursion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Recursion().setVisible(true);
            }
        });
    }
    
    public static int [][] fill(int [][] matrix, int filas, int columnas){
        SecureRandom random=new SecureRandom();
        
        matrix[filas][columnas]=random.nextInt(10);
        
        if(filas==matrix.length-1 && columnas==matrix[0].length-1){
            
            return matrix;
        }
        else{
            if(columnas==matrix[0].length-1){
            
            return fill(matrix, filas+1, 0);
            }
            else{
                return fill(matrix, filas, columnas+1);
            }
            
        }
        
    }
    
    
    public static String print(int [][]matrix, int filas, int columnas, String acum){
        
        acum=acum+"["+matrix[filas][columnas]+"]";
        
        if(filas==matrix.length-1 && columnas==matrix[0].length-1){
            
            return acum;
        }
        else{
            if(columnas==matrix[0].length-1){
                acum+="\n";
                return print(matrix, filas+1, 0, acum);
            }
            else{
                return print(matrix, filas, columnas+1, acum);
                
            }
        }
        
    } 
    
    public static int rowProduct(int [][]matrix1, int [][]matrix2, int fila, int columna, int indice, int suma){
        
        
        suma+=matrix1[fila][indice]*matrix2[indice][columna]; 
        if(indice ==matrix1[0].length-1){
           return suma;
        }
        else{
            return rowProduct(matrix1,matrix2,fila,columna,indice+1,suma);
        }
    }
    public static int [][]multiply(int [][]matrix1,int[][]matrix2,int[][]matrix3,int fila3,int columna3){

        
        matrix3[fila3][columna3]=rowProduct(matrix1, matrix2, fila3,columna3,0,0);
        
        if(columna3==matrix3[0].length-1 && fila3==matrix3.length-1){
            return matrix3;
        }
        else{
            if(columna3==matrix3[0].length-1){
                return multiply(matrix1,matrix2,matrix3,fila3+1,0);
                
                
            }
            else{
                return multiply(matrix1,matrix2,matrix3,fila3,columna3+1);
            }
        }
        
        
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
